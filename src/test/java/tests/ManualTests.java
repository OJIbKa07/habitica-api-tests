package tests;

import helpers.allure.testCase.Manual;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import static io.qameta.allure.Allure.step;

public class ManualTests {

    @Test
    @Manual
    @DisplayName("Авторизация пользователя через Log In на habitica.com")
    public void loginTest() {
        step("Открываем сайт habitica.com");
        step("Нажимаем кнопку 'Log In'");
        step("Вводим email существующего пользователя");
        step("Вводим пароль");
        step("Нажимаем кнопку подтверждения входа");
        step("Проверяем, что открылась главная панель с задачами (Dashboard)");
    }

    @Test
    @Manual
    @DisplayName("Регистрация нового пользователя через Sign Up")
    public void registrationTest() {
        step("Открываем сайт habitica.com");
        step("Нажимаем кнопку 'Sign Up'");
        step("Заполняем поля Username, Email, Password");
        step("Ставим галочку принятия условий (если отображается)");
        step("Нажимаем кнопку подтверждения регистрации");
        step("Проверяем, что открылась страница создания персонажа");
    }

    @Test
    @Manual
    @DisplayName("Создание новой задачи типа To-Do")
    public void createTodoTaskTest() {
        step("Авторизуемся как зарегистрированный пользователь");
        step("Переходим на вкладку 'Tasks' → раздел 'To-Do'");
        step("Нажимаем кнопку добавления новой задачи (+)");
        step("Вводим название задачи и описание");
        step("Выбираем приоритет задачи (если доступно)");
        step("Сохраняем задачу");
        step("Проверяем, что задача появилась в списке To-Do");
    }

    @Test
    @Manual
    @DisplayName("Создание новой привычки (Habit)")
    public void createHabitTest() {
        step("Авторизуемся как зарегистрированный пользователь");
        step("Переходим на вкладку 'Tasks' → раздел 'Habits'");
        step("Нажимаем кнопку добавления новой привычки (+)");
        step("Вводим название привычки");
        step("Выбираем тип привычки (только плюс / плюс и минус)");
        step("Добавляем описание (опционально)");
        step("Сохраняем привычку");
        step("Проверяем, что привычка отображается в списке Habits");
    }

    @Test
    @Manual
    @DisplayName("Создание ежедневной задачи (Daily)")
    public void createDailyTaskTest() {
        step("Авторизуемся как зарегистрированный пользователь");
        step("Переходим на вкладку 'Tasks' → раздел 'Dailies'");
        step("Нажимаем кнопку добавления новой задачи (+)");
        step("Вводим заголовок задачи");
        step("Настраиваем расписание выполнения (дни недели)");
        step("Добавляем описание (опционально)");
        step("Сохраняем задачу");
        step("Проверяем, что задача отображается в списке Daily");
    }

    @Test
    @Manual
    @DisplayName("Отметить выполнение задачи и получить награду (EXP + Gold)")
    public void completeTaskRewardTest() {
        step("Авторизуемся как зарегистрированный пользователь");
        step("Убеждаемся, что у пользователя есть хотя бы одна задача в To-Do / Daily / Habit");
        step("Отмечаем задачу как выполненную (нажимаем галочку или плюс)");
        step("Проверяем всплывающее уведомление о получении награды (EXP и Gold)");
        step("Проверяем, что количество Gold и EXP увеличилось");
    }

    @Test
    @Manual
    @DisplayName("Покупка предмета в Reward Shop за золото")
    public void buyItemShopTest() {
        step("Авторизуемся как зарегистрированный пользователь с достаточным количеством Gold");
        step("Переходим в раздел 'Rewards'");
        step("Выбираем любой доступный предмет для покупки");
        step("Нажимаем кнопку покупки");
        step("Подтверждаем действие (если появляется подтверждение)");
        step("Проверяем, что количество Gold уменьшилось");
        step("Проверяем, что предмет появился в инвентаре пользователя");
    }

    @Test
    @Manual
    @DisplayName("Отправка сообщения в чат Party или Guild")
    public void sendChatMessageTest() {
        step("Авторизуемся как зарегистрированный пользователь");
        step("Переходим в раздел 'Social'");
        step("Открываем Party или Guild чат");
        step("Вводим сообщение в поле ввода чата");
        step("Нажимаем кнопку отправки сообщения");
        step("Проверяем, что сообщение отображается в истории чата");
    }
}
